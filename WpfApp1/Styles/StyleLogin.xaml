<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">



    <SolidColorBrush x:Key="ColorLightPink" Color="#deabf5"/>
    <Style x:Key="LoginWindowStyle" TargetType="{x:Type Window}">
        <!--<Setter Property="DataContext" Value="local:LoginViewModel"/>-->
        <Setter Property="Height" Value="540"/>
        <Setter Property="Width" Value="960"/>
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="WindowStyle" Value="None"/>
    </Style>

    <LinearGradientBrush x:Key="GradientBackgroundBrush" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="#462AD8" Offset="0"/>
        <GradientStop Color="#DA34AE" Offset="0.75"/>
        <GradientStop Color="#8A16C1" Offset="1"/>
    </LinearGradientBrush>

    <Style x:Key="PersonalAccountBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Padding" Value="30"/>
        <Setter Property="CornerRadius" Value="25"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect BlurRadius="30" Color="LightGray" ShadowDepth="0"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabControlPersonalAccountStyle" TargetType="{x:Type TabControl}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="TabStripPlacement" Value="Left"/>
        <Setter Property="Foreground" Value="{DynamicResource ColorLightPink}"/>
        <Setter Property="Margin" Value="0 0 0 0"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Padding" Value="20"/>
    </Style>


    <Style x:Key="TabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource ColorLightPink}"/>
        <Setter Property="Opacity" Value="0.7"/>
        <Setter Property="Width" Value="77"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid>
                        <Border Name="Border" BorderBrush="Transparent" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="ContentSite"
                          VerticalAlignment="Center"
                          HorizontalAlignment="Center"
                          ContentSource="Header"
                          Margin="10,2"/>
                        </Border>
                        <Border x:Name="SelectedUnderline" BorderBrush="{DynamicResource ColorLightPink}" BorderThickness="0,0,0,2" CornerRadius="2,2,0,0" Visibility="Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                            <Setter Property="Opacity" Value="1"/>
                            <Setter TargetName="SelectedUnderline" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="PersonalAccountItemStyle" TargetType="{x:Type TabItem}" BasedOn="{StaticResource TabItemStyle}">
        <Setter Property="FontFamily" Value="Dhurjati"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="{DynamicResource ColorLightPink}"/>
        <Setter Property="Opacity" Value="1"/>
        <Setter Property="Width" Value="150"/>
        <Setter Property="Margin" Value="0 0 0 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Grid>
                        <Border Name="Border" BorderBrush="Transparent" BorderThickness="1,1,1,0" Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="ContentSite"
              VerticalAlignment="Center"
              HorizontalAlignment="Center"
              ContentSource="Header"
              Margin="10,12"/>
                        </Border>
                        <Border x:Name="SelectedUnderline" BorderBrush="{DynamicResource ColorLightPink}" BorderThickness="2,2,2,2" CornerRadius="2,30,2,30" Visibility="Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="Transparent"/>
                            <Setter Property="Opacity" Value="1"/>
                            <Setter TargetName="SelectedUnderline" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="menuButton">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="#fff" />
        <Setter Property="Height" Value="45" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Margin" Value="15 0 15 5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="10">
                        <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="AliceBlue"/>
                <Setter Property="Background" Value="#8A16C1"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="Page_Style"
       TargetType="{x:Type Page}">

        <Setter Property="RenderTransform">
            <Setter.Value>
                <TranslateTransform X="0"
                                Y="50" />
            </Setter.Value>
        </Setter>

        <Style.Triggers>

            <Trigger Property="Visibility"
                 Value="Collapsed">

                <Setter Property="Opacity"
                    Value="0" />

            </Trigger>

            <EventTrigger RoutedEvent="Loaded">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                     Duration="0:0:1"
                                     From="0"
                                     To="1" />
                        <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                     From="50"
                                     To="0"
                                     Duration="0:0:0.8"
                                     DecelerationRatio="0.6" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

        </Style.Triggers>

    </Style>


    <LinearGradientBrush x:Key="GradientBackgroundBrush2" StartPoint="0.5,0" EndPoint="0.5,1">
        <GradientStop Color="Pink" Offset="0" />
        <GradientStop Color="Purple" Offset="0.5" />
        <GradientStop Color="MediumVioletRed" Offset="1" />
    </LinearGradientBrush>

    <Style x:Key="MessageBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="{StaticResource GradientBackgroundBrush2}"/>
        <Setter Property="Opacity" Value="0.8"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Width" Value="Auto"/>
        <Setter Property="Padding" Value="30"/>
        <Setter Property="CornerRadius" Value="40"/>
    </Style>

    <Style x:Key="MainWindow" TargetType="{x:Type Window}">
        <Setter Property="ResizeMode" Value="NoResize"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="AllowsTransparency" Value="True"/>
    </Style>

    <Style x:Key="MessageBoxWindowStyle" TargetType="{x:Type Window}" BasedOn="{StaticResource MainWindow}">
        <Setter Property="Height" Value="225"/>
        <Setter Property="Width" Value="450"/>
        <Setter Property="Opacity" Value="0.9"/>
    </Style>


    <Style x:Key="RoundGradientButton" TargetType="Button">
        
        <Setter Property="Width" Value="120"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                    
                    <GradientStop Color="Purple" Offset="0.5" />
                    <GradientStop Color="MediumVioletRed" Offset="1" />
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Opacity" Value="0.8"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="20">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.3"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="Opacity" To="0.8" Duration="0:0:0.3"/>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>


    <Style x:Key="StandartText" TargetType="{x:Type TextBlock}">
        <Setter Property="FontFamily" Value="Dhurjati"/>
        <Setter Property="Foreground" Value="{DynamicResource ColorLightPink}"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="FontWeight" Value="Black"/>
        <Setter Property="Margin" Value="10 0 0 5"/>
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Opacity" Value="0.7"/>
    </Style>



    <Style TargetType="DataGridColumnHeader" x:Key="dataGridHeader">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridColumnHeader">
                    <Border x:Name="HeaderBorder" Background="Purple" Opacity="0.9">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                        Storyboard.TargetName="HeaderBorder"
                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                        To="Violet"
                                        Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                        Storyboard.TargetName="HeaderBorder"
                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                        To="Purple"
                                        Duration="0:0:0.2" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="AliceBlue" />
        <Setter Property="FontSize" Value="16" />
    </Style>

    <Style TargetType="DataGrid" x:Key="dataGrid">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="RowBackground" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="GridLinesVisibility" Value="None" />
    </Style>

    <Style TargetType="DataGridRow" x:Key="CustomDataGridRowStyle">
        <Setter Property="Background" Value="#E0E0E0"/>
        <Setter Property="Foreground" Value="#333333"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
        <Setter Property="ValidationErrorTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <TextBlock Foreground="Purple" Margin="2,0,0,0" VerticalAlignment="Center">!</TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="true">
                <Setter Property="Background" Value="Violet"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>



    <Style x:Key="DataGridCellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="TextBlock.FontSize" Value="13" />
        <Setter Property="Padding" Value="10" />
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center" HorizontalAlignment="Center"
                     Margin="{TemplateBinding Padding}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsKeyboardFocusWithin" Value="True">
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True"/>
                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                </MultiTrigger.Conditions>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsSelected" Value="True"/>
                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Foreground" Value="#666666"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.56"/>
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="Button" x:Key="dataGridButttonEdit">
        <Setter Property="Content" Value="Редактировать" />
        <Setter Property="Background" Value="#8A16C1"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style TargetType="TextBlock" x:Key="addTextBlock">
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="Margin" Value="30 0" />
        <Setter Property="Foreground" Value="AliceBlue" />
        <Setter Property="FontSize" Value="21" />
    </Style>


    <Style x:Key="TextBoxStyleUserName" TargetType="{x:Type TextBox}">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="Foreground" Value="#fff"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0 0 0 2"/>
        <Setter Property="Height" Value="28"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0 5 0 0"/>
        <Setter Property="Padding" Value="10 0 0 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border x:Name="border"
                        CornerRadius="5"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        SnapsToDevicePixels="True">
                        <ScrollViewer 
                        x:Name="PART_ContentHost"
                        Focusable="True"
                        HorizontalScrollBarVisibility="Hidden"
                        VerticalScrollBarVisibility="Hidden"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="#D1DF" TargetName="border" />
                        </Trigger>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter Property="BorderBrush" Value="#D1DF" TargetName="border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="Add">
        <Setter Property="Width" Value="80" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderThickness="2" Background="#8a1dc1" CornerRadius="15 0 15 0">
                        <TextBlock Text="Edit" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <TextBlock.Effect>
                                <DropShadowEffect ShadowDepth="1" Color="Black"/>
                            </TextBlock.Effect>
                        </TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="AddUser">
        <Setter Property="Width" Value="80" />
        <Setter Property="Height" Value="25" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="FontSize" Value="20" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border BorderThickness="2" Background="#8a1dc1" CornerRadius="15 0 15 0">
                        <TextBlock Text="Add" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <TextBlock.Effect>
                                <DropShadowEffect ShadowDepth="1" Color="Black"/>
                            </TextBlock.Effect>
                        </TextBlock>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>